###############################################################################
#
# IAR ANSI C/C++ Compiler V8.50.9.278/W32 for ARM         20/Oct/2021  09:34:52
# Copyright 1999-2020 IAR Systems AB.
#
#    Cpu mode             
#    Endian            =  little
#    Source file       =
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\utils\am_util_delay.c
#    Command line      =
#        -f C:\Users\casari\AppData\Local\Temp\2\EWB4E3.tmp
#        (C:\Tools\Ambiq\AmbiqSuite-R2.5.1\utils\am_util_delay.c -D iar -D
#        AM_PART_APOLLO3 -D AM_PACKAGE_BGA -D AM_FREERTOS -D AM_DEBUG_PRINTF -D
#        AM_UTIL_FAULTISR_PRINT -lcN
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\bin
#        --diag_suppress Pa050 -o
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\bin
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 --no_path_in_file_macros -e --fpu=VFPv4_sp
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.4\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\third_party\FreeRTOSv10.1.1\Source\include\\
#        -I C:\Tools\Ambiq\AmbiqSuite-R2.5.1\CMSIS\AmbiqMicro\Include\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\third_party\FreeRTOSv10.1.1\Source\portable\IAR\AMapollo2\\
#        -I C:\Tools\Ambiq\AmbiqSuite-R2.5.1\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\devices\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\utils\\ -I
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\..\src\\
#        -I
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\..\src\RTOS\\
#        -I
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\..\src\artemis\\
#        -I
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\..\src\bsp\\
#        -I C:\Tools\Ambiq\AmbiqSuite-R2.5.1\mcu\apollo3\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\CMSIS\ARM\Include\\ -I
#        $PROJ_DIR\src\RTOS\\ -I
#        C:\Tools\Ambiq\AmbiqSuite-R2.5.1\mcu\apollo3\hal\\ -I
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\src\app\\ -I
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\src\sys\\ -Ol)
#    Locale            =  C
#    List file         =
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\bin\am_util_delay.lst
#    Object file       =
#        C:\version-control\EDD-LCP_Control\Firmware\LCP_Control\iar\bin\am_util_delay.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

C:\Tools\Ambiq\AmbiqSuite-R2.5.1\utils\am_util_delay.c
      1          //*****************************************************************************
      2          //
      3          //! @file am_util_delay.c
      4          //!
      5          //! @brief A few useful delay functions.
      6          //!
      7          //! Functions for fixed delays.
      8          //
      9          //*****************************************************************************
     10          
     11          //*****************************************************************************
     12          //
     13          // Copyright (c) 2020, Ambiq Micro, Inc.
     14          // All rights reserved.
     15          //
     16          // Redistribution and use in source and binary forms, with or without
     17          // modification, are permitted provided that the following conditions are met:
     18          //
     19          // 1. Redistributions of source code must retain the above copyright notice,
     20          // this list of conditions and the following disclaimer.
     21          //
     22          // 2. Redistributions in binary form must reproduce the above copyright
     23          // notice, this list of conditions and the following disclaimer in the
     24          // documentation and/or other materials provided with the distribution.
     25          //
     26          // 3. Neither the name of the copyright holder nor the names of its
     27          // contributors may be used to endorse or promote products derived from this
     28          // software without specific prior written permission.
     29          //
     30          // Third party software included in this distribution is subject to the
     31          // additional license terms as defined in the /docs/licenses directory.
     32          //
     33          // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     34          // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     35          // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     36          // ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
     37          // LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
     38          // CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
     39          // SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
     40          // INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
     41          // CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
     42          // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
     43          // POSSIBILITY OF SUCH DAMAGE.
     44          //
     45          // This is part of revision 2.5.1 of the AmbiqSuite Development Package.
     46          //
     47          //*****************************************************************************
     48          
     49          #include  <stdint.h>
     50          #include <stdbool.h>
     51          #include "am_mcu_apollo.h"
     52          #include "am_util_delay.h"
     53          
     54          //*****************************************************************************
     55          //
     56          //! @brief Delays for a desired amount of loops.
     57          //!
     58          //! @param ui32CycleLoops - Desired number of cycle loops to delay for.
     59          //!
     60          //! This function will delay for a number of cycle loops.
     61          //!
     62          //! @note - the number of cycles each loops takes to execute is approximately 3.
     63          //! Therefore the actual number of cycles executed will be ~3x ui32CycleLoops.
     64          //!
     65          //! For example, a ui32CycleLoops value of 100 will delay for 300 cycles.
     66          //!
     67          //! @returns None
     68          //
     69          //*****************************************************************************
     70          void
     71          am_util_delay_cycles(uint32_t ui32Iterations)
     72          {
     73          #if (!defined(AM_PART_APOLLO4) && !defined(AM_PART_APOLLO4B))
     74              //
     75              // Call the BOOTROM cycle delay function
     76              //
     77              am_hal_flash_delay(ui32Iterations);
     78          #endif // !AM_PART_APOLLO4
     79          }
     80          
     81          //*****************************************************************************
     82          //
     83          //! @brief Delays for a desired amount of milliseconds.
     84          //!
     85          //! @param ui32MilliSeconds - number of milliseconds to delay for.
     86          //!
     87          //! This function will delay for a number of milliseconds.
     88          //!
     89          //! @returns None
     90          //
     91          //*****************************************************************************
     92          void
     93          am_util_delay_ms(uint32_t ui32MilliSeconds)
     94          {
     95          #if (defined(AM_PART_APOLLO4) || defined(AM_PART_APOLLO4B))
     96              am_hal_delay_us( ui32MilliSeconds * 1000);
     97          #else // AM_PART_APOLLO4
     98              uint32_t ui32Loops, ui32HFRC;
     99          #if AM_APOLLO3_CLKGEN
    100              am_hal_clkgen_status_t sClkgenStatus;
    101              am_hal_clkgen_status_get(&sClkgenStatus);
    102              ui32HFRC = sClkgenStatus.ui32SysclkFreq;
    103          #else // AM_APOLLO3_CLKGEN
    104              ui32HFRC = am_hal_clkgen_sysclk_get();
    105          #endif // AM_APOLLO3_CLKGEN
    106              ui32Loops = ui32MilliSeconds * (ui32HFRC / 3000);
    107          
    108              //
    109              // Call the BOOTROM cycle delay function
    110              //
    111              am_hal_flash_delay(ui32Loops);
    112          #endif // AM_PART_APOLLO4
    113          }
    114          
    115          //*****************************************************************************
    116          //
    117          //! @brief Delays for a desired amount of microseconds.
    118          //!
    119          //! @param ui32MicroSeconds - number of microseconds to delay for.
    120          //!
    121          //! This function will delay for a number of microseconds.
    122          //!
    123          //! @returns None
    124          //
    125          //*****************************************************************************
    126          void
    127          am_util_delay_us(uint32_t ui32MicroSeconds)
    128          {
    129          #if (defined(AM_PART_APOLLO4) || defined(AM_PART_APOLLO4B))
    130              am_hal_delay_us( ui32MicroSeconds );
    131          #else // AM_PART_APOLLO4
    132              uint32_t ui32Loops, ui32HFRC;
    133          
    134          #if AM_APOLLO3_CLKGEN
    135              am_hal_clkgen_status_t sClkgenStatus;
    136              am_hal_clkgen_status_get(&sClkgenStatus);
    137              ui32HFRC = sClkgenStatus.ui32SysclkFreq;
    138          #else // AM_APOLLO3_CLKGEN
    139              ui32HFRC = am_hal_clkgen_sysclk_get();
    140          #endif // AM_APOLLO3_CLKGEN
    141              ui32Loops = ui32MicroSeconds * (ui32HFRC / 3000000);
    142          
    143              //
    144              // Call the BOOTROM cycle delay function
    145              //
    146              am_hal_flash_delay(ui32Loops);
    147          #endif // AM_PART_APOLLO4
    148          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   am_util_delay_cycles
         8   -> am_hal_flash_delay
      24   am_util_delay_ms
        24   -> am_hal_clkgen_status_get
        24   -> am_hal_flash_delay
      24   am_util_delay_us
        24   -> am_hal_clkgen_status_get
        24   -> am_hal_flash_delay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       8  am_util_delay_cycles
      30  am_util_delay_ms
      28  am_util_delay_us

 
 70 bytes in section .text
 
 70 bytes of CODE memory

Errors: none
Warnings: none
